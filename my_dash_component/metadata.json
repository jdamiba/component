{
  "src/lib/components/BulmaBox.react.js": {
    "description": "",
    "displayName": "BulmaBox",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/BulmaButton.react.js": {
    "description": "",
    "displayName": "BulmaButton",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The text displayed in the button."
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'small'",
              "computed": false
            },
            {
              "value": "'medium'",
              "computed": false
            },
            {
              "value": "'large'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The size of the button."
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The color of the button."
      },
      "rounded": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether the button has\nrounded corners."
      },
      "loading": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether the button shows\nthe \"loading\" icon."
      },
      "outlined": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether the button is\noutlined."
      },
      "inverted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether the button has\ninverted colors."
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether the button is\ndisabled."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/MyDashComponent.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "MyDashComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}